---
- hosts: all
  tasks:
    - name: CHECKING CPU VIRTUALIZATION EXTENSION
      shell: "fgrep -e vmx -e svm /proc/cpuinfo"
      changed_when: false
    - name: UPDATING LOCALE
      shell: "update-locale LANG=en_US.UTF-8"
      when: ansible_env.LANG != "en_US.UTF-8"
    - name: SETTING MYSQL PASSWORD
      shell: "{{item.cmd}}"
      with_items:
        - {cmd: "echo 'mysql-server mysql-server/root_password password eve-ng' | debconf-set-selections"}
        - {cmd: "echo 'mysql-server mysql-server/root_password_again password eve-ng' | debconf-set-selections"}
      changed_when: false
    - name: ADDING EVE-NG APT REPOSITORY
      lineinfile:
        dest: "/etc/apt/sources.list"
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
      with_items:
        - {regexp: "^deb .*www.eve-ng.net", line: "deb [arch=amd64] http://www.eve-ng.net/repo xenial main"}
        - {regexp: "^#deb-src .*www.eve-ng.net", line: "#deb-src [arch=amd64] http://www.eve-ng.net/repo xenial main"}
    - name: GETTING NON ROOT USERS
      register: non_root_users
      find:
        paths: /home
        file_type: directory
        recurse: no
      changed_when: false
    - name: DISCONNETING NON ROOT USERS
      shell: "pkill -TERM -U {{item.pw_name}} || true"
      with_items: "{{non_root_users.files}}"
      when: non_root_users.files.0 is defined
      ignore_errors: yes
      changed_when: false
    - name: DELETING NON ROOT USERS
      shell: "userdel -r {{item.pw_name}}"
      with_items: "{{non_root_users.files}}"
      when: non_root_users.files.0 is defined
    - name: UPLOADING CONFIGURATIONS
      copy:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        owner: "{{item.owner}}"
        group: "{{item.group}}"
        mode: "{{item.mode}}"
      with_items:
        - {src: "files/hosts", dest: "/etc/hosts", owner: "root", group: "root", mode: "0644"}
        - {src: "files/hostname", dest: "/etc/hostname", owner: "root", group: "root", mode: "0644"}
        - {src: "files/interfaces", dest: "/etc/network/interfaces", owner: "root", group: "root", mode: "0644"}
# Preinstalling EVE-NG because of a bug in presint script from eve-ng-guacamole package)
    - name: WORKAROUND PREINSTALLING EVE-NG SCHEMAS
      apt:
        name: eve-ng-schema
        allow_unauthenticated: yes
        update_cache: yes
        force_apt_get: yes
    - stat: path=/opt/unetlab/schema/guacamole-update.sql
      register: schema_update
    - stat: path=/opt/unetlab/schema/guacamole-002-create-admin-user.sql
      register: schema_002
    - name: WORKAROUND REORDERING SCHEMAS
      shell: "{{item.cmd}}"
      with_items:
        - {cmd: "mv /opt/unetlab/schema/guacamole-update.sql /opt/unetlab/schema/guacamole-002-update.sql"}
        - {cmd: "mv /opt/unetlab/schema/guacamole-002-create-admin-user.sql /opt/unetlab/schema/guacamole-003-create-admin-user.sql"}
      when: (schema_update.stat.exists == True) and (schema_002.stat.exists == True)
    - name: INSTALLING EVE-NG
      apt:
        name: eve-ng
        allow_unauthenticated: yes
        update_cache: yes
        force_apt_get: yes
    - name: GETTING NON EVE-NG INSTALLED KERNELS
      register: kernels_to_be_removed
      shell: "dpkg-query -f='${binary:Package}\n' -W 'linux-image*' | sed '/.*-generic/p; t; d;'"
      changed_when: false
    - name: REMOVING NON EVE-NG INSTALLED KERNELS
      apt:
        name: "{{kernels_to_be_removed.stdout_lines}}"
        update_cache: yes
        force_apt_get: yes
        state: absent
        purge: yes
      when: kernels_to_be_removed.stdout_lines.0 is defined
    - name: GETTING NON EVE-NG INSTALLED HEADERS
      register: headers_to_be_removed
      shell: "dpkg-query -f='${binary:Package}\n' -W 'linux-headers*' | sed '/.*-generic/p; t; d;'"
      changed_when: false
    - name: REMOVING NON EVE-NG INSTALLED HEADERS
      apt:
        name: "{{headers_to_be_removed.stdout_lines}}"
        update_cache: yes
        force_apt_get: yes
        state: absent
        purge: yes
      when: headers_to_be_removed.stdout_lines.0 is defined
    - name: UPLOADING EVE-NG IOL LICENSE
      copy:
        src: "images/iol/iourc"
        dest: "/opt/unetlab/addons/iol/bin/iourc"
        owner: "root"
        group: "root"
        mode: "0644"
    - name: UPLOADING EVE-NG IMAGES (IOL)
      copy:
        src: "{{item}}"
        dest: "/opt/unetlab/addons/iol/bin"
        owner: "root"
        group: "root"
        mode: "0755"
      with_fileglob:
        - images/iol/*bin
    - name: UPLOADING EVE-NG IMAGES (DYNAMIPS)
      copy:
        src: "{{item}}"
        dest: "/opt/unetlab/addons/dynamips"
        owner: "root"
        group: "root"
        mode: "0644"
      with_fileglob:
        - images/dynamips/*image
    - name: UPLOADING EVE-NG IMAGES (QEMU)
      copy:
        src: "images/qemu"
        dest: "/opt/unetlab/addons"
        owner: "root"
        group: "root"
        mode: "0644"
        directory_mode: "0755"
    - name: SETTING EVE-NG AS CONFIGURED
      copy:
        src: "files/empty"
        dest: "/opt/ovf/.configured"
        owner: "root"
        group: "root"
        mode: "0644"
    - name: GETTING CURRENT HOSTNAME
      register: current_hostname
      shell: "hostname"
      changed_when: false
    - name: REBOOT
      shell: "sleep 5 && reboot"
      async: 1
      poll: 0
      when: current_hostname.stdout_lines.0 != "eve-ng"
    - wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 300
      when: current_hostname.stdout_lines.0 != "eve-ng"
