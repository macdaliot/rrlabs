---
-
  hosts: all
  tasks:
    - name: UPDATING LOCALE
      shell: "update-locale LANG=en_US.UTF-8"
      when: ansible_env.LANG != "en_US.UTF-8"
    - name: INSTALLING PYTHON
      apt:
        name: python
        update_cache: yes
        force_apt_get: yes
    - name: "ADDING EVE-NG APT REPOSITORY"
      lineinfile:
        dest: "/etc/apt/sources.list"
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
      with_items:
        - {regexp: "^deb .*www.eve-ng.net", line: "deb [arch=amd64] http://www.eve-ng.net/repo xenial main"}
        - {regexp: "^#deb-src .*www.eve-ng.net", line: "#deb-src [arch=amd64] http://www.eve-ng.net/repo xenial main"}
    - name: UPLOADING HOSTS AND HOSTNAME FILES
      copy:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        owner: "{{item.owner}}"
        group: "{{item.group}}"
        mode: "{{item.mode}}"
      with_items:
        - {src: "files/hosts", dest: "/etc/hosts", owner: "root", group: "root", mode: "0644"}
        - {src: "files/hostname", dest: "/etc/hostname", owner: "root", group: "root", mode: "0644"}
    - name: INSTALLING EVE-NG
      apt:
        name: eve-ng
        allow_unauthenticated: yes
        update_cache: yes
        force_apt_get: yes
    - name: UPDATING ALL PACKAGES
      apt:
        autoremove: yes
        allow_unauthenticated: yes
        upgrade: yes
        force_apt_get: yes
    - name: UPLOADING NETWORK CONFIGURATION
      copy:
        src: "files/interfaces"
        dest: "/etc/network/interfaces"
        owner: "root"
        group: "root"
        mode: "0644"
    - name: GETTING NON EVE-NG INSTALLED KERNELS
      register: kernels_to_be_removed
      shell: "dpkg-query -f='${binary:Package}\n' -W 'linux-image*' | sed '/.*-generic/p; t; d;'"
      changed_when: false
    - name: REMOVING NON EVE-NG INSTALLED KERNELS
      apt:
        name: "{{kernels_to_be_removed.stdout_lines}}"
        update_cache: yes
        force_apt_get: yes
        state: absent
        purge: yes
      when: kernels_to_be_removed.stdout_lines.0 is defined
    - name: GETTING NON EVE-NG INSTALLED HEADERS
      register: headers_to_be_removed
      shell: "dpkg-query -f='${binary:Package}\n' -W 'linux-headers*' | sed '/.*-generic/p; t; d;'"
      changed_when: false
    - name: REMOVING NON EVE-NG INSTALLED HEADERS
      apt:
        name: "{{headers_to_be_removed.stdout_lines}}"
        update_cache: yes
        force_apt_get: yes
        state: absent
        purge: yes
      when: headers_to_be_removed.stdout_lines.0 is defined
    - name: UPLOADING EVE-NG IOL LICENSE
      copy:
        src: "images/iol/iourc"
        dest: "/opt/unetlab/addons/iol/bin/iourc"
        owner: "root"
        group: "root"
        mode: "0644"
    - name: UPLOADING EVE-NG IMAGES (IOL)
      copy:
        src: "{{item}}"
        dest: "/opt/unetlab/addons/iol/bin"
        owner: "root"
        group: "root"
        mode: "0755"
      with_fileglob:
        - images/iol/*bin
    - name: UPLOADING EVE-NG IMAGES (DYNAMIPS)
      copy:
        src: "{{item}}"
        dest: "/opt/unetlab/addons/dynamips"
        owner: "root"
        group: "root"
        mode: "0644"
      with_fileglob:
        - images/dynamips/*image
    - name: UPLOADING EVE-NG IMAGES (QEMU)
      copy:
        src: "images/qemu"
        dest: "/opt/unetlab/addons"
        owner: "root"
        group: "root"
        mode: "0644"
        directory_mode: "0755"
    - name: SETTING EVE-NG AS CONFIGURED
      copy:
        src: "files/empty"
        dest: "/opt/ovf/.configured"
        owner: "root"
        group: "root"
        mode: "0644"
    - name: GETTING CURRENT HOSTNAME
      register: current_hostname
      shell: "hostname"
      changed_when: false
    - name: REBOOT
      shell: "reboot"
      when: current_hostname.stdout_lines.0 != "eve-ng"

    #- name: UPLOADING EVE-NG IMAGES (IOL)

      # deb-src [arch=amd64] http://www.eve-ng.net/repo xenial main

#    -
#      debug: var=save_config
