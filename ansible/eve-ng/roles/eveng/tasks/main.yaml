---
- name: "UPDATING LOCALE"
  shell: "update-locale LANG=en_US.UTF-8"
  changed_when: false
  # when: ansible_env.LANG != "en_US.UTF-8" # Requires gather_facts

- name: "SETTING MYSQL PASSWORD"
  shell: "{{item.cmd}}"
  with_items:
    - {cmd: "echo 'mysql-server mysql-server/root_password password eve-ng' | debconf-set-selections"}
    - {cmd: "echo 'mysql-server mysql-server/root_password_again password eve-ng' | debconf-set-selections"}
  changed_when: false

- name: "UPLOADING CONFIGURATIONS"
  copy:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
    owner: "{{item.owner}}"
    group: "{{item.group}}"
    mode: "{{item.mode}}"
  with_items:
    - {src: "hosts", dest: "/etc/hosts", owner: "root", group: "root", mode: "0644"}
    - {src: "hostname", dest: "/etc/hostname", owner: "root", group: "root", mode: "0644"}
    - {src: "interfaces", dest: "/etc/network/interfaces", owner: "root", group: "root", mode: "0644"}

- name: "INSTALLING EVE-NG"
  apt:
    name: eve-ng
    allow_unauthenticated: yes
    update_cache: yes
    force_apt_get: yes
    state: latest
  async: 1800
  poll: 15

- name: "GETTING NON EVE-NG INSTALLED KERNELS"
  register: kernels_to_be_removed
  shell: "dpkg-query -f='${binary:Package}\n' -W 'linux-image*' | sed '/.*-generic/p; t; d;'"
  changed_when: false

- name: "REMOVING NON EVE-NG INSTALLED KERNELS"
  apt:
    name: "{{kernels_to_be_removed.stdout_lines}}"
    update_cache: yes
    force_apt_get: yes
    state: absent
    purge: yes
  when: kernels_to_be_removed.stdout_lines.0 is defined

- name: "GETTING NON EVE-NG INSTALLED HEADERS"
  register: headers_to_be_removed
  shell: "dpkg-query -f='${binary:Package}\n' -W 'linux-headers*' | sed '/.*-generic/p; t; d;'"
  changed_when: false

- name: "REMOVING NON EVE-NG INSTALLED HEADERS"
  apt:
    name: "{{headers_to_be_removed.stdout_lines}}"
    update_cache: yes
    force_apt_get: yes
    state: absent
    purge: yes
  when: headers_to_be_removed.stdout_lines.0 is defined

- name: "UPLOADING LABS"
  file:
    path: /opt/unetlab/labs/Courses
    state: directory
    mode: 02755

- name: "UPLOADING EVE-NG IOL LICENSE"
  copy:
    src: "images/iol/iourc"
    dest: "/opt/unetlab/addons/iol/bin/iourc"
    owner: "root"
    group: "root"
    mode: "0644"

- name: "UPLOADING EVE-NG IMAGES (IOL)"
  copy:
    src: "{{item}}"
    dest: "/opt/unetlab/addons/iol/bin"
    owner: "root"
    group: "root"
    mode: "0755"
  with_fileglob:
    - images/iol/*bin

- name: "UPLOADING EVE-NG IMAGES (DYNAMIPS)"
  copy:
    src: "{{item}}"
    dest: "/opt/unetlab/addons/dynamips"
    owner: "root"
    group: "root"
    mode: "0644"
  with_fileglob:
    - images/dynamips/*image

- name: "UPLOADING EVE-NG IMAGES (QEMU)"
  copy:
    src: "images/qemu"
    dest: "/opt/unetlab/addons"
    owner: "root"
    group: "root"
    mode: "0644"
    directory_mode: "0755"

- name: "SETTING EVE-NG AS CONFIGURED"
  copy:
    content: ""
    dest: "/opt/ovf/.configured"
    owner: "root"
    group: "root"
    mode: "0644"

- name: "GETTING CURRENT HOSTNAME"
  register: current_hostname
  shell: "hostname"
  changed_when: false

- name: "REBOOT"
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: current_hostname.stdout_lines.0 != "eve-ng"

- wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300
  when: current_hostname.stdout_lines.0 != "eve-ng"
